#include "platform.h"
#include "xparameters.h"
#include "xgpio.h"

char inbyte(void);
void outbyte(char c);

//declare an XGpio and XGpio instance
XGpio GPIO_0;
XGpio_Config GPIO_0_conf;

int main()
{
	char c;

	GPIO_0_conf.BaseAddress = XPAR_AXI_GPIO_0_BASEADDR;
	GPIO_0_conf.DeviceId = XPAR_GPIO_0_DEVICE_ID;
	GPIO_0_conf.InterruptPresent = XPAR_GPIO_0_INTERRUPT_PRESENT;
	GPIO_0_conf.IsDual = XPAR_GPIO_0_IS_DUAL;

	//Initialize the XGpio instance
	XGpio_CfgInitialize(&GPIO_0, &GPIO_0_conf, GPIO_0_conf.BaseAddress);

    init_platform();

    u32 output;

    unsigned int array[] = {0x00001, 0x00002, 0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009,
							0x00010, 0x00011, 0x00012, 0x00013, 0x00014, 0x00015, 0x00016, 0x00017, 0x00018,
							0x00019, 0x00020, 0x00021, 0x00022, 0x00023, 0x00024, 0x00025, 0x00026, 0x00027,
							0x00028, 0x00029, 0x00030, 0x00031, 0x00032};

	print("o");
	output = 0x00000000;
	output = 0x00002 << 5;
	output = output | 0x00000000;
	int we = 0x00000001 << 20;
	output = output | we;

	XGpio_DiscreteWrite(&GPIO_0, 1, output);


    do
    {
    	print("(x for exit):");
		c = inbyte();
		inbyte();
    } while (c != 'x');

    print("\nThe program has been terminated\n\r");
    cleanup_platform();

    return 0;
}
